{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleSwitch","htmlFor","Textform","useState","text","setText","style","color","heading","backgroundColor","onChange","event","console","log","target","value","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53403ff5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n        <nav className={`navbar navbar-expand-lg text-${props.mode} navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              {props.title}\r\n            </a>\r\n            {/* <Link className=\"navbar-brand\" to=\"/\">\r\n              {props.title}\r\n            </Link> */}\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarTogglerDemo02\"\r\n              aria-controls=\"navbarTogglerDemo02\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    Home\r\n                  </a>\r\n                  {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                    Home\r\n                  </Link> */}\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/about\">\r\n                    {props.about}\r\n                  </Link>\r\n                </li> */}\r\n              </ul>\r\n              {/* Dropdown */}\r\n              <div className=\"btn-group\">\r\n                <button type=\"button\" className={`btn btn-${props.mode === \"light\"?\"dark\":\"light\"} dropdown-toggle`} data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Action\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li><a className=\"dropdown-item bg-danger text-light\" href=\"/\">Action</a></li>\r\n                  <li><a className=\"dropdown-item bg-success text-light\" href=\"/\">Another action</a></li>\r\n                  <li><a className=\"dropdown-item bg-info text-light\" href=\"/\">Something else here</a></li>\r\n                  {/* <li><hr className=\"dropdown-divider\"/></li> */}\r\n                  <li><a className=\"dropdown-item bg-warning text-light\" href=\"/\">Separated link</a></li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"form-check form-switch\">\r\n                <input className=\"form-check-input\" onClick={props.toggleSwitch} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className={`form-check-label text-${props.mode === \"light\"?\"dark\":\"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark/Light Mode</label>\r\n              </div>\r\n              {/* <form className=\"d-flex\">\r\n                <input\r\n                  className=\"form-control me-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                  Search\r\n                </button>\r\n              </form> */}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    about:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  about: \"Set About here\",\r\n};","import React, { useState } from 'react'\r\n// import {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"new text\"; <----- this is wrong way to change state\r\n    //setText(\"New Text\")   //<-----correct way to change state\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handleDownClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text has been cleared!\", \"success\");\r\n    }\r\n    const handleCopyClick = ()=>{\r\n        let text = document.getElementById(\"myTexxt\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text has been copied!\", \"success\");\r\n    }\r\n    const handleRemoveExtraSpace = ()=>{\r\n        let newText =text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed!\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"handleOnChange clicked\");\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n      <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h1>{props.heading}</h1>\r\n        {/* <div className=\"mb-3\">\r\n            <label for=\"myBox\" className=\"form-label\">Email address</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"myBox\" placeholder=\"name@example.com\"/>\r\n            </div> */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myTexxt\" className=\"form-label\">\r\n            Textarea\r\n          </label>\r\n          <textarea className=\"form-control\" style={{backgroundColor: props.mode === \"dark\"?\"grey\":\"white\",color:props.mode === \"dark\"?\"white\":\"black\"}} onChange={handleOnChange} value={text} id=\"myTexxt\" rows=\"5\" placeholder=\"Type your text here\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleRemoveExtraSpace}>RemoveExtraSpace</button>\r\n      </div>\r\n      <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n          <h2>Your Text Summary</h2>\r\n          <p>{text.split(\" \").length} and {text.length} characters</p>\r\n          <p>{0.08 * text.split(\" \").length} Minutes Read</p>\r\n          <h2>Preview your text below</h2>\r\n          <p>{text.length>0?text:\"Enter text in the above text box to preview here\"}</p>\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nTextform.propTypes = {\r\n    heading:PropTypes.string.isRequired\r\n}\r\nTextform.defaultProps = {\r\n    heading:\"Enter Heading Here\"\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Textform from \"./components/TextForm\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\n// import About from \"./components/About\";\r\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  // const [colorPalette, setColorPalette] = useState(\"\");\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  };\r\n  // const changeColor = () => {\r\n  //   if (colorPalette === \"danger\") {\r\n  //     setColorPalette(\"danger\");\r\n  //   } else if (colorPalette === \"success\") {\r\n  //     setColorPalette(\"success\");\r\n  //   } else if (colorPalette === \"info\") {\r\n  //     setColorPalette(\"info\");\r\n  //   } else if (colorPalette === \"warning\") {\r\n  //     setColorPalette(\"warning\");\r\n  //   }\r\n  // };\r\n  const toggleSwitch = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"rgb(30, 49, 99)\";\r\n      document.body.style.color = \"#fff\";\r\n      showAlert(\"Dark Mode has benn enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"#fff\";\r\n      document.body.style.color = \"#212529\";\r\n      showAlert(\"Light Mode has benn enabled\", \"success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar/> */}\r\n      {/* <Router> */}\r\n        <Navbar\r\n          title=\"Swapnil\"\r\n          about=\"About Us\"\r\n          mode={mode}\r\n          toggleSwitch={toggleSwitch}\r\n        />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          {/* <Switch> */}\r\n            {/* /users  ---> Component 1\r\n            /users/contact  ---> Component 2\r\n            we should always use \"exact\" while giving path in route becoz \"Router\" partiallly match path */}\r\n            {/* <Route exact path=\"/\"> */}\r\n              <Textform\r\n                showAlert={showAlert}\r\n                heading=\"Enter the text to analyze below\"\r\n                mode={mode}\r\n              />\r\n            {/* </Route>\r\n            <Route exact path=\"/about\">\r\n              <About></About>\r\n            </Route>\r\n          </Switch> */}\r\n        </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}